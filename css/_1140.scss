/* CSS Resets */
/*
html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,address,cite,code,del,dfn,em,img,ins,q,small,strong,sub,sup,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{border:0;margin:0;padding:0}article,aside,figure,figure img,figcaption,hgroup,footer,header,nav,section,video,object{display:block}a img{border:0}figure{position:relative}figure img{width:100%}
*/

/* ==================================================================================================================== */
/* ! The 1140px Grid V2 by Andy Taylor \ http://cssgrid.net \ http://www.twitter.com/andytlr \ http://www.andytlr.com   */
/* ==================================================================================================================== */

.container {
	padding-left: 20px;
	padding-right: 20px;
}

.row {
	width: 100%;
	max-width: 1140px;
	//min-width: 755px;
	min-width: 480px; 	//JR: There's this weird no-man's land between portrait-tablet and landscape-mobile. But my thinking is, 
						// keep it liquid unless it just gets too funky. Then go back to locking the min-width at 768px.
	margin: 0 auto;
	overflow: hidden;
}

.onecol, .twocol, .threecol, .fourcol, .fivecol, .sixcol, .sevencol, .eightcol, .ninecol, .tencol, .elevencol {
	margin-right: 3.8%;
	float: left;
	min-height: 1px;
}

.row .onecol { width: 4.85%; }
.row .twocol { width: 13.45%; }
.row .threecol { width: 22.05%; }
.row .fourcol { width: 30.75%; }
.row .fivecol { width: 39.45%; }
.row .sixcol { width: 48%; }
.row .sevencol { width: 56.75%; }
.row .eightcol { width: 65.4%; }
.row .ninecol { width: 74.05%; }
.row .tencol { width: 82.7%; }
.row .elevencol { width: 91.35%; }
.row .twelvecol { width: 100%; float: left; }

.last { margin-right: 0px; }

img, object, embed {
	max-width: 100%;
}

img {
	height: auto;
}

body {
	// TABLETS
	@include tablet-only {
		font-size: 0.8em;
		//line-height: 1.5em; // Not sure what that was for.
	}
	// MOBILE
	@include mobile-landscape-and-down {
		// font-size: 16px;
		-webkit-text-size-adjust: none;
		border-top:2px solid red;
		width: 100%;
		min-width: 0;
		margin-left: 0px;
		margin-right: 0px;
		padding-left: 0px;
		padding-right: 0px;
		.row, .container {
			width: 100%;
			min-width: 0;
			margin-left: 0px;
			margin-right: 0px;
			padding-left: 0px;
			padding-right: 0px;
			// I actually use something like this in my main CSS file, where #content has a .container class:
			// #content {
			// 	padding:40px 20px;
			// 	@include mobile-only {
			// 		padding:20px 0;
			// 	}
			// }
		}
		.row .onecol, .row .twocol, .row .threecol, .row .fourcol, .row .fivecol, .row .sixcol, .row .sevencol, .row .eightcol, .row .ninecol, .row .tencol, .row .elevencol, .row .twelvecol {
			//JR CHANGES: It seems to me that columns, no matter what size, should be on separate lines when on a very small screen.
			display:block; width:94%; //JR
			// width: auto; //Default
			// float: none; //Default
			margin-left: 0px;
			margin-right: 0px;
			padding-left: 3%; //JR
			padding-right: 3%; //JR
		}
	}
}
